<tool id="gmx_full_setup" name="GROMACS system setup" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@">
    <description>- create protein-ligand system, solvate and neutralize</description>
    <macros>
        <import>macros.xml</import>
        <token name="@GALAXY_VERSION@">0</token>
    </macros>

    <expand macro="requirements" />

    <command detect_errors="exit_code"><![CDATA[
        export gmx='/galaxy-central/tools/bridge/md_tools/bin/gmx' &&
        ln -s '$pdb_input' ./pdb_input.pdb &&
        ln -s '$ions' ./ions.mdp &&
        cp -r /cchem/galaxy/local_tools/gromacs/charmm36-jul2022.ff . &&
        cp -r /cchem/galaxy/local_tools/gromacs/amber14sb_OL15.ff . && 
        (echo $ff) | gmx pdb2gmx -f ./pdb_input.pdb -o processed.gro -p topol.top -i posres.itp -${ignore_h}ignh -water $water -merge all &>> verbose.txt &&

obabel -ipdb '$input1' -opdb | sed '/CONNECT/d' > ligand.pdb &&
antechamber -i ligand.pdb
        -o out.mol2
        -fi pdb
        -fo mol2
        -c bcc
        -pf yes
        -nc '$nc'
        -at gaff2
        -j 4
        -rn MOL
        -m '$m' 2>&1 &&
        parmchk2 -i out.mol2 -f mol2 -o ligand.frcmod -s gaff2 && 
        tleap -s -f <(echo source leaprc.gaff2; echo loadAmberParams ligand.frcmod ; echo lig = loadMol2 out.mol2; echo saveAmberParm  lig ligand.parm7 ligand.rst7  ;echo quit) &&

        ln -s '$__tool_directory__'/amber2gmx.py ./amber2gmx.py &&
        python amber2gmx.py --coord ligand.rst7 --topol ligand.parm7 && 

        python '$__tool_directory__/merge_top.py' 
            --lig-top output.itp
            --prot-top topol.top
            --lig-gro output.gro
            --prot-gro  processed.gro 
            --complex-top complex.top
            --complex-gro complex.gro &&


        gmx editconf -f complex.gro -o out.gro -d $dim -bt cubic &>> verbose.txt && 
        gmx solvate -cp ./out.gro -cs spc216.gro -o solv.gro -p ./complex.top &>> verbose.txt &&
gmx grompp -f ./ions.mdp -c solv.gro -p ./complex.top -o ions.tpr -maxwarn 10 &>> verbose.txt
        #if $neutralise or $conc:  ## else this step would do nothing
            &&
            echo 'SOL' | gmx genion -s ions.tpr -o solv_ions.gro -p ./complex.top -pname NA -nname CL $neutralise -conc $conc -seed 160210 &>> verbose.txt &&
            mv solv_ions.gro solv.gro
        #end if


    ]]></command>
        <configfiles>
            <!-- .mdp file for the gromacs simulation -->
            <configfile name="ions">

; Parameters are not so important here as no simulation is run
integrator  = steep
emtol    = 1000.0
emstep      = 0.01
nsteps    = 1
nstlist        = 1
cutoff-scheme   = Verlet
ns_type        = grid
coulombtype      = cutoff
rcoulomb      = 1.0
rvdw        = 1.0
pbc            = xyz
            </configfile>
        </configfiles>

    <inputs>
        <param argument="pdb_input" type="data" format='pdb' label="Protein only PDB"/>
        <param type="data" name="input1" label="Ligand only PDB" format="pdb,mol2"/>
      <param name="nc" type="integer" value="0" label="Net charge" min="-50" max="50" help="Specify the net charge for the molecule. Default is 0. (-nc)"/>
      <param name="m" type="integer" value="1" label="Multiplicity" min="1" max="10" help="Multiplicity, 2S+1. Default is 1. (-m)"/>

        <param argument="water" type="select" label="Water model" help="Model for simulating water molecules in the solvent">
            <option value="tip3p" selected="true">TIP3P</option>
            <option value="tip4p">TIP4P</option>
            <option value="tip5p">TIP5P</option>
            <option value="spc">SPC</option>
            <option value="spce">SPC/E</option>
            <option value="none">None</option>
        </param>
        <param argument="ff" type="select" label="Force field" help="Specify a molecular force field">
            <option value="1">CHARMM36m(July 2022)</option>
            <option value="2">AMBER14SB_OL15</option>
            <option value="17">OPLS/AA</option>
            <option value="11">GROMOS43A1</option>
            <option value="5">AMBER96</option>
            <option value="15">GROMOS53A6</option>
            <option value="8">AMBER99SB-ILDN</option>
            <option value="7">AMBER99SB</option>
            <option value="14">GROMOS53A5</option>
            <option value="12">GROMOS43A2</option>
            <option value="9">AMBERGS</option>
            <option value="10">CHARMM27</option>
            <option value="3">AMBER03</option>
            <option value="16">GROMOS54A7</option>
            <option value="13">GROMOS45A3</option>
            <option value="6">AMBER99</option>
            <option value="4">AMBER94</option>
        </param>
<param argument="dim" type="float" label="Box dimensions in nanometers" value="1.2" min="0.0" max="10.0" help="Dimensions of the box in which simulation will take place" />
<param name="neutralise" label="Add ions to neutralise system?" type="select" help="If system is charged, replace an appropriate number of randomly selected solvent molecules with sodium or chloride ions to neutralise it.">
            <option value="-neutral">Yes, add ions</option>
            <option value="">No</option>
        </param>
        <param argument="conc" type="float" value="0.15" min="0" max="6" label="Specify salt concentration (sodium chloride) to add, in mol/liter" help="Note existing ions in the system are not taken into account - including those added if the neutralise option is selected. Ions are added by randomly replacing water molecules." />

        <param argument="ignore_h" type="boolean" label="Ignore protein hydrogens" truevalue="" falsevalue="no" help="Ignore hydrogen atoms that are in the protein coordinate file." />
        <expand macro="log" />

    </inputs>

    <outputs>
        <data name="output1" format="top" from_work_dir="complex.top" label="GROMACS setup (TOP) on ${on_string}"/>
        <data name="output2" format="gro" from_work_dir="solv.gro" label="GROMACS setup (GRO) on ${on_string}"/>
        <data name="output3" format="itp" from_work_dir="posres.itp" label="GROMACS setup (ITP) on ${on_string}"/>
        <expand macro="log_outputs" />
    </outputs>

    <tests>
    </tests>
    <help><![CDATA[

.. class:: infomark

**What it does**

This tool generates a protein-ligand system for GROMACS simulation. This entails producing a topology by parameterizing the protein usign the pdb2gmx command and the selected force field. The ligand is paramaterized using Ambertools Antechamber with the GAFF2 atom typing and AM1-BCC charge assignment used by default. The system is solvated in a cubic box and ions can be added ti neutralzie the system.

_____

.. class:: infomark

**Input**

       - Protein PDB
       - Ligand PDB
       - Net charge of the ligand 
       - Multiplicity of the ligand
       - Water model and forcefield must be specified
       - Dimension of the solvation box
       - Ion concentration
     
_____

        
.. class:: infomark

**Output**

       - Complex topology file (.TOP).
       - Position restraint (itp) file of the protein backbone.
       - Compelx structure file (.GRO).

    ]]></help>

    <expand macro="citations" />
</tool>
