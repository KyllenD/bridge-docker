<tool id="autodock_gpu" name="Run AutoDock-GPU" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@">
    <macros>
        <token name="@TOOL_VERSION@">1.5.7</token>
        <token name="@GALAXY_VERSION@">0</token>
    </macros>
    <description>Run Autodock-GPU</description>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">mgltools</requirement>
    </requirements>
    <stdio>
        <exit_code range="1" />
    </stdio>
    <command><![CDATA[
        
        cp /galaxy-central/tools/bridge/md_tools/bin/autodock_gpu_128wi ./autodock_gpu_128wi &&
        cp $__tool_directory__/load_modules.py . &&
        ln -s $__tool_directory__/dock_all.sh ./dock_all.sh &&
        ln -s $__tool_directory__/dlgtopdb.sh ./dlgtopdb.sh && 
        ln -s  $__tool_directory__/split_pdbqt.py ./split_pdbqt.py && 
        ln -s $__tool_directory__/rearrange.sh ./rearrange.sh &&
        ln -s $ligand ./ligand.pdbqt && 
        ln -s $map maps.tar && 
        tar xf maps.tar &&
        mv maps/* . &&
        #set $lib='LD_LIBRARY_PATH' 
        #set $path='/usr/local/cuda/lib64/'
        export $lib=$path &&
        bash dock_all.sh $poses &>> $log &&
        bash '$__tool_directory__'/analyse.sh &&
        cp RESULTS.txt '$summary' &&
        cp docked_poses.pdb $output_pdb 
    ]]></command>
    <inputs>
       <param type="data" name="ligand" format="pdbqt" label="The ligand to be docked"/>
       <param type="data" name="map" format="tar" label="A tar file containing the he prepared affinity maps"/>
       <param type="text" name="poses" format="txt" label="Number of poses to output"/>
    </inputs>
    <outputs>
        <data name="output_pdb" format="pdb" label="Autodock GPU - Docked poses"/>
        <data name="summary" format="csv" label="Autodock GPU - Results"/>
        <data name="log" format="txt" label="Autodock GPU - Log"/>
    </outputs>
    <tests>
    </tests>
    <help><![CDATA[

.. class:: infomark

**What this tool does**

Runs AUTODOCK-GPU using the grids generated by the Prepare receptor tool (as a .tar containing all map files) and the prepared ligand to be docked (as .pdbqt).
 

    ]]></help>
    <citations>
        <citation type="doi">10.1021/acs.jctc.0c01006</citation>
    </citations>
</tool>
